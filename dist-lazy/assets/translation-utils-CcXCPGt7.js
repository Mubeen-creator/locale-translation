import{h as l}from"./section-auth-DbFeGzG6.js";const i=new Map,a={debug:(t,...n)=>{},warn:(t,...n)=>{console.warn(`[TranslationUtils] ${t}`,...n)},error:(t,...n)=>{console.error(`[TranslationUtils] ${t}`,...n)}};function c(t,n){if(!t||!n)return null;const o=n.split(".");let r=t;for(const e of o)if(r&&typeof r=="object"&&e in r)r=r[e];else return null;return typeof r=="string"?r:null}async function g(t,n="en"){const o=`${n}:${t}`;if(i.has(o))return a.debug(`fetchDynamicTranslation: Using cached translation for key '${t}'`),i.get(o);a.debug(`fetchDynamicTranslation: Fetching translation for key '${t}' in locale '${n}'`);try{const r=await l.loadingStrategy.load(n);if(r){const e=c(r,t);if(e&&e!==t)return i.set(o,e),a.debug(`fetchDynamicTranslation: Found translation '${e}' for key '${t}'`),e}return a.debug(`fetchDynamicTranslation: No translation found, returning key '${t}'`),t}catch(r){return a.error(`fetchDynamicTranslation: Error fetching translation for key '${t}':`,r),t}}async function f(t="en"){const n=document.querySelectorAll("[data-translate]");if(n.length===0){a.debug("triggerTranslationForElements: No elements with data-translate found");return}a.debug(`triggerTranslationForElements: Found ${n.length} elements to translate`);const o=Array.from(n).map(async r=>{const e=r.getAttribute("data-translate");if(e)try{const s=await g(e,t);s&&s!==e&&(r.textContent=s,a.debug(`triggerTranslationForElements: Translated '${e}' to '${s}'`))}catch(s){a.error(`triggerTranslationForElements: Failed to translate '${e}':`,s)}});await Promise.all(o),a.debug("triggerTranslationForElements: Completed translation of all elements")}export{f as t};
//# sourceMappingURL=translation-utils-CcXCPGt7.js.map
